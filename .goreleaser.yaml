# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 1

project_name: improv
report_sizes: true

release:
  github:
    name: improv-wifi
    owner: mrmarble

gomod:
  proxy: true
  mod: mod
  env:
    - GOPROXY=https://proxy.golang.org,direct

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    - go test ./...

builds:
  - main: ./cmd
    binary: improv-{{.Os}}-{{.Arch}}
    no_unique_dist_dir: true
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - "amd64"
      - "arm64"
      - "arm"
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -w
      - -s
      - -X main.version={{.Version}} -X main.commit={{.ShortCommit}} -X main.date={{.CommitDate}}
    gcflags:
      - all=-l -B
archives:
  - format: binary
    files:
      - none*
    name_template: >-
      {{ .ProjectName }}-
      {{- .Os }}-
      {{- .Arch }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999